---
- name: Provision system
  hosts: localhost
  connection: local
  gather_facts: False

  vars:
    ec2_access_key:
    ec2_secret_key:
    ec2_region: us-east-1
    ec2_image: ami-bc8131d4
    ec2_instance_type: m1.small
    ec2_keypair:
    ec2_security_group: default
    ec2_instance_count: 1
    ec2_tag: demo_video
    wait_for_port: 22
    ssh_key:

  tasks:
    - name: Launch AWS EC2 Instance
      ec2:
       access_key="{{ ec2_access_key }}"
       secret_key="{{ ec2_secret_key }}"
       keypair="{{ ec2_keypair }}"
       group="{{ ec2_security_group }}"
       type="{{ ec2_instance_type }}"
       image="{{ ec2_image }}"
       region="{{ ec2_region }}"
       instance_tags="{'Name':'{{ ec2_tag }}'}"
       count="{{ ec2_instance_count }}"
       wait=true
      register: ec2

    - name: Wait for instances to come up
      local_action: wait_for host={{ item.public_dns_name }}
        port={{ wait_for_port }} delay=180 timeout=320 state=started
      with_items: "{{ ec2.instances }}"

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_dns_name }}"
        groupname: ec2_instances
      with_items "{{ ec2.instances }}"

    - name: Configure Instance(s)
      hosts: launched
      become: True
      gather_facts: True
      roles:
        - docker

    -name: Terminiate instances
    hosts: localhost
    connection: local
    tasks:
      - name: Terminate instances that were previously launched
        ec2:
          state: 'absent'
          instance_ids: "{{ ec2.instance_ids }}"
